version: "3.8"

networks:
  traefik:
    external: true
  monitoring:
    external: true

services:
  backend:
    image: {{ backend_remote_image_latest }}
    depends_on:
      - mongo
    networks:
      - {{ base_name }}-{{ env }}
      - monitoring
    environment:
      PORT: 80
      MONGO_URI: mongodb://mongo/corona
      INFLUXDB_URI: http://admin:admin@influxdb:8086/influx
      ENV: {{ env }}
    deploy:
      replicas: {{ backend_container_count }}
      placement:
        constraints:
          - "node.labels.vds==true"

  mongo:
    deploy:
      placement:
        constraints:
          - "node.labels.vds==true"

  nginx:
    image: nginx
    networks:
      - "{{ base_name }}-{{ env }}"
      - traefik
    depends_on:
      - backend
      - frontend
    volumes:
      - "./nginx:/etc/nginx/conf.d"
    labels:
      - "traefik.enable=true"
      {% for url in (domains + www_domains) -%}
      - "traefik.http.routers.{{ url | replace('.', '-') }}.rule=Host(`{{ url }}`)"
      - "traefik.http.routers.{{ url | replace('.', '-') }}.entrypoints=https"
      - "traefik.http.routers.{{ url | replace('.', '-') }}.tls.certresolver=leresolver"
      {% endfor -%}
      - "traefik.docker.network=traefik"
    deploy:
      placement:
        constraints:
          - "node.labels.vds==true"
      labels:
        - "traefik.enable=true"
        {% for url in (domains + www_domains) -%}
        - "traefik.http.routers.{{ url | replace('.', '-') }}.rule=Host(`{{ url }}`)"
        - "traefik.http.routers.{{ url | replace('.', '-') }}.entrypoints=https"
        - "traefik.http.routers.{{ url | replace('.', '-') }}.tls.certresolver=leresolver"
        {% endfor -%}
        - "traefik.docker.network=traefik"
        - "traefik.http.services.{{ url | replace('.', '-') }}.loadbalancer.server.port=80"
